/**
1. html css 
- 웹을 한다면 필수적으로 html을 semantic하게 사용하는 방법과, 기본적인 float, flex를 사용해 기본적인 레이아웃은 맞출 수 있어야합니다. 그 외에는 백엔드에게는 투머치에요.
2. javascript 
- 이 단계에서는 아직 복잡한 프로토타입, 콜스택, 메모리, 이벤트루프 개념을 알 필요는 없습니다. 단지 그냥 자바스크립트로 구구단을 짜고, 함수를 활용해 계산기를 만드는 정도 레벨로만 하면 돼요. 
3. node.js -> express
- 여기서 백엔드가 시작됩니다. 복잡하게 알 필요는 없고, node를 사용한 모듈 패턴, npm을 사용해 다른 개발자가 작성해놓은 코드 반영하기, 웹 서버 만들기, request response 사이클, html 템플릿 적용법, 데이터베이스 연결하여 사용할정도의 기본 쿼리 능력, 쿠키 세션, 미들웨어 정도까지만 이해하면 돼요.
4. database -> sql / nosql
- 제대로 solid가 뭔지, sql 쿼리 작성 능력, 데이터베이스 구조 짜기 (1:1, 1:many, many:many), 트랜잭션 관리, join, indexing정도로 공부해야합니다. 그리고 왜 nosql이 나왔는지, 어떤식으로 다르고 어떻게 활용 가능한지를 알면 이후에 큰 도움이 됩니다.
5. express + database -> express + mongoose || express + postgres 
- 여기서부터는 대형 프로젝트를 만들어보기 시작하는건데요, 개인적으로 엘리님이 이번에 낸 node강의도 괜찮아보여요. 그게 아니라면 node, express, mongo 또는 sql을 사용해 프로젝트 짜는법을 알려주는 책을 한번 따라가보는것도 좋습니다. 
6. react -> react + css || react + sass || react + styled components
- 객체지향, 함수형, 네트워크 통신을 공부하기에는 사실 리액트가 최고입니다. 혼자 포트폴리오를 작성할때 리액트를 사용할 줄 알면 세상 편해요. 연습하고 싶은 내용들을 프론트 백 둘다 구현해서 만들면 팀프로젝트도 맘 안맞는 사람이랑 굳이 화내가며 할 필요가 없습니다.
7. mern fullstack -> mongo + express + react + node
- 여기서부터 개인 포트폴리오를 만들기 시작해요. 포트폴리오 만들어서 취업준비를 하기 시작합니다. 
8. JavaScript
- 자바스크립트를 깊게 파보기 시작할 단계입니다. 콜스택 이벤트 루프, 힙메모리, 가비지 콜렉팅, 프로토타입 체이닝 등 동작 원리를 디자인패턴과 함께 공부해보세요
9. TypeScript -> typescript + express
- JS 개발자에게는 필수입니다 
*/